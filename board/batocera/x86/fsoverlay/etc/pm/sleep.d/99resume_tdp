#!/bin/bash

# check we have a max system TDP value
CPU_TDP=$(/usr/bin/batocera-settings-get system.cpu.tdp)
# if not, we exit as the CPU is not supported by the TDP values
if [ -z "$CPU_TDP" ]; then
    echo "No CPU TDP value found."
    exit 0
fi

TDP_SAVED="/var/run/amd_tdp_saved"

# set the final TDP value
set_tdp() {
    local TDP_VALUE=$1

    echo "Setting AMD Processor TDP to ${TDP_VALUE}W"
    /usr/bin/batocera-amd-tdp "${TDP_VALUE}"
}

save_tdp() {
    local CURRENT_TDP=$(ryzenadj -i | grep 'PPT LIMIT FAST' | awk '{printf "%.0f\n", $6}')

    if [[ "$CURRENT_TDP" =~ ^[0-9]+$ && "$CPU_TDP" =~ ^[0-9]+$ ]] && [ "$CURRENT_TDP" -ne "$CPU_TDP" ]; then
        echo "$CURRENT_TDP" > "$TDP_SAVED"
    fi
}

case "$1" in
    suspend|hibernate)
        # We want to save the current TDP to restore after resuming from suspend
        save_tdp
        ;;
    resume|thaw)
        sleep 1 # Some BIOS may revert to defaults when resuming from suspend. Ensures that saved tdp is set after this.
        if [ ! -s "$TDP_SAVED" ]; then
            echo "No saved TDP value before suspending found."
            exit 0
        else
            SAVED_VALUE=$(cat "$TDP_SAVED")
            set_tdp "${SAVED_VALUE}"
            rm -f "$TDP_SAVED"  # Clean up after restoring
        fi
        ;;
esac

exit 0
